/*
 * File: app/view/ApiDocsInterface.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.ApiDocsInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.ApiDocsInterface',

    requires: [
        'Rubedo.view.MyTool16',
        'Rubedo.view.MyTool17',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.container.ButtonGroup',
        'Ext.toolbar.Fill',
        'Ext.panel.Tool',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.plugin.CellEditing',
        'Ext.grid.View',
        'Ext.form.field.ComboBox',
        'Ext.form.field.TextArea',
        'Ext.grid.feature.Grouping'
    ],

    height: 456,
    id: 'ApiDocsInterface',
    width: 930,
    constrainHeader: true,
    iconCls: 'process-icon',
    title: 'API Docs',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.widget("AddApiEndpointWindow").show();
                            },
                            ACL: 'write.ui.workspaces',
                            localiserId: 'addBtn',
                            id: 'apiDocsAddBtn',
                            iconAlign: 'top',
                            iconCls: 'add_big',
                            scale: 'large',
                            text: 'Ajouter'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.getCmp("apiEndpointsGrid").getStore().remove(Ext.getCmp("apiEndpointsGrid").getSelectionModel().getLastSelected());
                            },
                            ACL: 'write.ui.workspaces',
                            localiserId: 'removeBtn',
                            disabled: true,
                            id: 'apiDocsRemoveBtn',
                            iconAlign: 'top',
                            iconCls: 'remove_big',
                            scale: 'large',
                            text: 'Supprimer'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var codeExamples={ };
                                var codeExamplesEntity={ };
                                var currentExamples = Ext.Array.pluck(Ext.getStore("CodeExamples").getRange(),"data");
                                Ext.Array.forEach(currentExamples,function(example){
                                    if (example.type=="entity"){
                                        if (!codeExamplesEntity[example.verb]){
                                            codeExamplesEntity[example.verb]=[ ];
                                        }
                                        codeExamplesEntity[example.verb].push(example.code);
                                    } else if (example.type=="route"){
                                        if (!codeExamples[example.verb]){
                                            codeExamples[example.verb]=[ ];
                                        }
                                        codeExamples[example.verb].push(example.code);
                                    }
                                });
                                var rec=Ext.getCmp("apiEndpointsGrid").getSelectionModel().getLastSelected();
                                rec.beginEdit();
                                rec.set("codeExamples",codeExamples);
                                rec.set("codeExamplesEntity",codeExamplesEntity);
                                rec.endEdit();
                            },
                            ACL: 'write.ui.workspaces',
                            localiserId: 'saveBtn',
                            disabled: true,
                            id: 'apiDocsSaveBtn',
                            iconAlign: 'top',
                            iconCls: 'floppy_disc_big',
                            scale: 'large',
                            text: 'Enregistrer'
                        },
                        {
                            xtype: 'buttongroup',
                            disabled: true,
                            id: 'codeExamplesBtnGroup',
                            headerPosition: 'bottom',
                            title: 'Code examples',
                            columns: 2,
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.widget("AddApiCodexampleWindow").show();
                                    },
                                    ACL: 'write.ui.workspaces',
                                    localiserId: 'addBtn',
                                    id: 'apiDocsAddBtn1',
                                    iconAlign: 'top',
                                    iconCls: 'add_big',
                                    scale: 'large',
                                    text: 'Ajouter'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.getCmp("apiCodeExamplesGrid").getStore().remove(Ext.getCmp("apiCodeExamplesGrid").getSelectionModel().getLastSelected());
                                    },
                                    ACL: 'write.ui.workspaces',
                                    localiserId: 'removeBtn',
                                    disabled: true,
                                    id: 'apiDocsRemoveBtn1',
                                    iconAlign: 'top',
                                    iconCls: 'remove_big',
                                    scale: 'large',
                                    text: 'Supprimer'
                                }
                            ]
                        },
                        {
                            xtype: 'tbfill'
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'mytool16'
                },
                {
                    xtype: 'mytool17'
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'apiEndpointsGrid',
                    width: 200,
                    title: 'Endpoints',
                    forceFit: true,
                    store: 'ApiDocs',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'url',
                            text: 'URL',
                            editor: {
                                xtype: 'textfield',
                                allowBlank: false,
                                allowOnlyWhitespace: false
                            }
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {

                        })
                    ],
                    listeners: {
                        selectionchange: {
                            fn: me.onApiEndpointsGridSelectionChange,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    id: 'apiCodeExamplesGrid',
                    title: 'Code examples ',
                    forceFit: false,
                    store: 'CodeExamples',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'verb',
                            text: 'Verb',
                            flex: 1,
                            editor: {
                                xtype: 'combobox',
                                allowBlank: false,
                                allowOnlyWhitespace: false,
                                editable: false,
                                forceSelection: true,
                                queryMode: 'local',
                                store: [
                                    'get',
                                    'put',
                                    'post',
                                    'delete',
                                    'patch'
                                ]
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'type',
                            text: 'Type',
                            flex: 1,
                            editor: {
                                xtype: 'combobox',
                                allowBlank: false,
                                allowOnlyWhitespace: false,
                                editable: false,
                                forceSelection: true,
                                queryMode: 'local',
                                store: [
                                    'route',
                                    'entity'
                                ]
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return("<pre>"+value+"</pre>");
                            },
                            dataIndex: 'code',
                            text: 'Code',
                            flex: 5,
                            editor: {
                                xtype: 'textareafield',
                                allowBlank: false,
                                allowOnlyWhitespace: false,
                                grow: true,
                                growMax: 300
                            }
                        }
                    ],
                    features: [
                        {
                            ftype: 'grouping'
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {

                        })
                    ],
                    listeners: {
                        selectionchange: {
                            fn: me.onApiCodeExamplesGridSelectionChange,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onApiDocsInterfaceAfterRender,
                    scope: me
                },
                beforeclose: {
                    fn: me.onApiDocsInterfaceBeforeClose,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onApiEndpointsGridSelectionChange: function(model, selected, eOpts) {
        if (Ext.isEmpty(selected)){
            Ext.getCmp("apiDocsRemoveBtn").disable();
            Ext.getCmp("apiDocsSaveBtn").disable();
            Ext.getCmp("codeExamplesBtnGroup").disable();
            Ext.getStore("CodeExamples").removeAll();
        } else {
            Ext.getCmp("apiDocsRemoveBtn").enable();
            Ext.getCmp("apiDocsSaveBtn").enable();
            Ext.getCmp("codeExamplesBtnGroup").enable();
            Ext.getStore("CodeExamples").removeAll();
            var newExamples=[ ];
            var codeExamples=Ext.clone(selected[0].get("codeExamples"));
            if (Ext.isEmpty(codeExamples)){
                codeExamples={ };
            }
            Ext.Object.each(codeExamples,function(key,value){
                if (!Ext.isEmpty(value)){
                    Ext.Array.forEach(value,function(codEx){
                        newExamples.push({
                            type:"route",
                            verb:key,
                            code:codEx
                        });
                    });
                }
            });
            var codeExamplesEntity=Ext.clone(selected[0].get("codeExamplesEntity"));
            if (Ext.isEmpty(codeExamplesEntity)){
                codeExamplesEntity={ };
            }
            Ext.Object.each(codeExamplesEntity,function(key,value){
                if (!Ext.isEmpty(value)){
                    Ext.Array.forEach(value,function(codEx){
                        newExamples.push({
                            type:"entity",
                            verb:key,
                            code:codEx
                        });
                    });
                }
            });
            Ext.getStore("CodeExamples").loadData(newExamples);

        }
    },

    onApiDocsInterfaceAfterRender: function(component, eOpts) {
        Ext.getStore("ApiDocs").load();
    },

    onApiDocsInterfaceBeforeClose: function(panel, eOpts) {
        Ext.getStore("ApiDocs").removeAll();
    },

    onApiCodeExamplesGridSelectionChange: function(model, selected, eOpts) {
        if (Ext.isEmpty(selected)){
            Ext.getCmp("apiDocsRemoveBtn1").disable();
        } else {
            Ext.getCmp("apiDocsRemoveBtn1").enable();
        }
    }

});